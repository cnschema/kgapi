define({ "api": [  {    "type": "get",    "url": "/entities/:id",    "title": "Get Entity",    "name": "GetEntity",    "group": "EntityCoreAPI",    "description": "<p>按ID获取实体。注意，实体的@type为 实体所有@type基于cnschema分类继承关系的传递闭包，例如 [MusicGroup] =&gt; [MusicGroup, Organization, Thing]</p>",    "version": "0.1.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p><code>必须</code> Entity's unique ID.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "type",            "description": "<p>DDefault 'EntitySearchResult'.</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "result",            "description": "<p>An Entity Object.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"@type\": \"EntitySearchResult\",\n  \"result\":  {\n      \"@id\": \"kg:19a1321\",\n      \"@type\": [\n          \"Thing\",\n          \"Person\"\n      ],\n      \"name\": \"刘德华\",\n      \"alternateName\": [\"华仔\"],\n      \"dateModified\": \"2017-01-17T14:40:00+8:00\",\n      \"entityScore\": 192802,\n      \"description\": \"香港实力派演员、歌手。\"\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "EntityNotFound",            "description": "<ol start=\"404\"> <li>The <code>id</code> of the Entity was not found.</li> </ol>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "RequestUnautorized",            "description": "<ol start=\"401\"> <li>The request is unauthorized, usually missing app_key.</li> </ol>"          }        ]      },      "examples": [        {          "title": "EntityNotFound(404):",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"Entity Not Found\"\n}",          "type": "json"        },        {          "title": "RequestUnautorized(401):",          "content": "HTTP/1.1 401 Not Found\n{\n  \"error\": \"Request Unautorized\"\n}",          "type": "json"        }      ]    },    "filename": "docs/kg.py",    "groupTitle": "EntityCoreAPI"  },  {    "type": "get",    "url": "/entities:lookup",    "title": "Lookup Entities",    "name": "LookupEntities",    "group": "EntityCoreAPI",    "description": "<p>redis lookup service。按名字，或者ids 获取一组实体详细。</p>",    "version": "0.1.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String[]",            "optional": false,            "field": "names",            "description": "<p><code>必须之一</code> list of Entity name, match whole word.</p>"          },          {            "group": "Parameter",            "type": "String[]",            "optional": false,            "field": "ids",            "description": "<p><code>必须之一</code> list of Entity ids.</p>"          },          {            "group": "Parameter",            "type": "String[]",            "optional": false,            "field": "types",            "description": "<p>Entity type, List of String, use cnschema name . any entity whose type overlapping with types counts at a match.</p>"          },          {            "group": "Parameter",            "type": "Integer",            "optional": false,            "field": "limit",            "description": "<p>number results to be returned.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "type",            "description": "<p>Defaut 'ItemList'.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "itemListElement",            "description": "<p>List of EntitySearchResult (Array of Objects).</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "itemListElement.type",            "description": "<p>Defaut 'EntitySearchResult'.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "itemListElement.result",            "description": "<p>An Entity.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "     HTTP/1.1 200 OK\n     {\n    \t\"@type\": \"ItemList\",\n\t\t\"numberOfItems\": 1,\n    \t\"itemListElement\": [{\n    \t\t\"@type\": \"EntitySearchResult\",\n    \t\t\"result\": {\n    \t\t\t\"@id\": \"6c84fb90-12c4-11e1-840d-7b25c5ee775a\",\n    \t\t\t\"@type\": [\n    \t\t\t\t\"Thing\",\n    \t\t\t\t\"Organization\",\n    \t\t\t\t\"MusicGroup\"\n    \t\t\t],\n    \t\t\t\"name\": \"刘德华\",\n    \t\t\t\"alternateName\": [\"华仔\"],\n    \t\t\t\"dateModified\": \"2017-01-17T14:40:00+8:00\",\n    \t\t\t\"entityScore\": 192802,\n    \t\t\t\"description\": \"香港实力派演员、歌手。\"\n    \t\t}\n    \t}]\n    }",          "type": "json"        }      ]    },    "filename": "docs/kg.py",    "groupTitle": "EntityCoreAPI"  },  {    "type": "post",    "url": "/entities:index:cypher",    "title": "Cypher Graph Query",    "name": "GraphCypher",    "group": "EntityIndexAPI",    "description": "<p>基于cypher查询的图查询API。</p>",    "version": "0.3.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "query",            "description": "<p><code>必须</code>  graph query expressed in Cypher. 需要进一步明确NEO4j的数据模型。</p>"          }        ]      },      "examples": [        {          "title": "Cypher Query",          "content": "{\n     \"query\":  \"MATCH (user)-[:friend]->(follower) WHERE user.name IN ['Joe', 'John', 'Sara', 'Maria', 'Steve'] AND follower.name =~ 'S.*' RETURN user.name, follower.name\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "type",            "description": "<p>Defaut 'ItemList'.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "itemListElement",            "description": "<p>List of EntitySearchResult (Array of Objects).</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "itemListElement.type",            "description": "<p>Defaut 'EntitySearchResult'.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "itemListElement.result",            "description": "<p>An Entity.</p>"          },          {            "group": "Success 200",            "type": "Float",            "optional": false,            "field": "itemListElement.resultScore",            "description": "<p>Matching result score.</p>"          }        ]      }    },    "filename": "docs/kg.py",    "groupTitle": "EntityIndexAPI"  },  {    "type": "post",    "url": "/entities:index:es",    "title": "ElasticSearch Query",    "name": "GraphEs",    "group": "EntityIndexAPI",    "description": "<p>基于Elastic Search 查询的图查询API。目前只支持one step。 需要进一步明确ES的数据模型。</p>",    "version": "0.2.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "query",            "description": "<p><code>必须</code>  graph query expressed in Elastic Search Query.</p>"          }        ]      },      "examples": [        {          "title": "Elastici Search Query",          "content": "  {\n\"query\": {\n\"size\": 10,\n\"_source\": [\"name\", \"byArtist\", \"@id\", \"mergedFrom\"],\n\"query\": {\n\"function_score\": {\n\"query\": {\n\"filtered\": {\n\"filter\": {\n\"bool\": {\n\"must\": [{\n\"term\": {\n\"@type.raw\": \"MusicRecording\"\n}\n}, {\n\"term\": {\n\"mergedFrom.statedIn.raw\": \"music.163.com\"\n}\n}, {\n\"term\": {\n\"byArtist.@id.raw\": \"歌手2\"\n}\n}, {\n\"term\": {\n\"byArtist.@id.raw\": \"黑豹\"\n}\n}]\n}\n}\n}\n},\n\"functions\": [{\n\"filter\": {\n\"term\": {\n\"name.raw\": \"朋友\"\n}\n},\n\"weight\": 1000\n}]\n}\n}\n}\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "type",            "description": "<p>Defaut 'ItemList'.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "itemListElement",            "description": "<p>List of EntitySearchResult (Array of Objects).</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "itemListElement.type",            "description": "<p>Defaut 'EntitySearchResult'.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "itemListElement.result",            "description": "<p>An Entity.</p>"          },          {            "group": "Success 200",            "type": "Float",            "optional": false,            "field": "itemListElement.resultScore",            "description": "<p>Matching result score.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "     HTTP/1.1 200 OK\n     {\n    \t\"@type\": \"ItemList\",\n\t\t\"numberOfItems\": 1,\n    \t\"itemListElement\": [{\n    \t\t\"@type\": \"EntitySearchResult\",\n    \t\t\"result\": {\n    \t\t\t\"@id\": \"kg:12da321\",\n    \t\t\t\"@type\": [\n    \t\t\t\t\"Thing\",\n    \t\t\t\t\"Organization\",\n    \t\t\t\t\"MusicGroup\"\n    \t\t\t],\n    \t\t\t\"name\": \"刘德华\",\n    \t\t\t\"alternateName\": [\"华仔\"],\n    \t\t\t\"dateModified\": \"2017-01-17T14:40:00+8:00\",\n    \t\t\t\"entityScore\": 192802,\n    \t\t\t\"description\": \"香港实力派演员、歌手。\"\n    \t\t}\n    \t}]\n    }",          "type": "json"        }      ]    },    "filename": "docs/kg.py",    "groupTitle": "EntityIndexAPI"  },  {    "type": "get",    "url": "/entities:list",    "title": "List Entities",    "name": "ListEntities",    "group": "EntitySyncAPI",    "description": "<p>支持同步知识图谱。目前只传递实体索引相关的部分，不要求全量传递数据。</p>",    "version": "0.4.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String[]",            "optional": false,            "field": "types",            "description": "<p>Entity type, List of String, use cnschema name . any entity whose type overlapping with types counts at a match.</p>"          },          {            "group": "Parameter",            "type": "Integer",            "optional": false,            "field": "limit",            "description": "<p>number results to be returned.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "since",            "description": "<p>所有返回结果更新时间不早于此时间，格式 ISO8601 e.g. &quot;2017-01-17T14:40:00Z&quot;.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sort",            "description": "<p>none:不在意是否排序  random:每次结果随机排序  score:按entityScore倒序  modified:按更新时间倒序</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "indexOnly",            "description": "<p>1:only return index (@id, @type, name, alternateName, dateModified, description) (right now 1 is the only and default value. future may add 0 for passing complete entity data)</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "type",            "description": "<p>Defaut 'ItemList'.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "itemListElement",            "description": "<p>List of EntitySearchResult (Array of Objects).</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "itemListElement.type",            "description": "<p>Defaut 'EntitySearchResult'.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "itemListElement.result",            "description": "<p>An Entity.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "     HTTP/1.1 200 OK\n     {\n    \t\"@type\": \"ItemList\",\n\t\t\"numberOfItems\": 1,\n    \t\"itemListElement\": [{\n    \t\t\"@type\": \"EntitySearchResult\",\n    \t\t\"result\": {\n    \t\t\t\"@id\": \"6c84fb90-12c4-11e1-840d-7b25c5ee775a\",\n    \t\t\t\"@type\": [\n    \t\t\t\t\"Thing\",\n    \t\t\t\t\"Organization\",\n    \t\t\t\t\"MusicGroup\"\n    \t\t\t],\n    \t\t\t\"name\": \"刘德华\",\n    \t\t\t\"alternateName\": [\"华仔\"],\n    \t\t\t\"dateModified\": \"2017-01-17T14:40:00+8:00\",\n    \t\t\t\"description\": \"香港实力派演员、歌手。\"\n    \t\t}\n    \t}]\n    }",          "type": "json"        }      ]    },    "filename": "docs/kg.py",    "groupTitle": "EntitySyncAPI"  }] });
